{"version":3,"sources":["images/github.svg","components/Header/index.js","utils/index.js","components/collections/VirtualCard.js","components/collections/Basic.js","components/collections/PlaceholderOnScroll.js","components/collections/WithDynamicCardSize.js","components/Main/index.js","components/App/index.js","registerServiceWorker.js","index.js","images/logo.svg"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","github_ref2","react_default","a","createElement","fillRule","d","github_SvgGithub","_ref","svgRef","props","width","height","viewBox","fill","aria-hidden","ref","ForwardRef","forwardRef","Header","__webpack_require__","p","className","src","reactLogo","alt","href","rel","BADGE_COLORS","getItemColor","VirtualCard","style","children","Basic","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","itemSize","dimensions","columnWidth","getColumnWidth","rowHeight","getRowHeight","state","size","distance","gridWidth","Math","floor","columnCount","ceil","collection","_this2","columnIndex","rowIndex","_this2$props","_this2$props$dimensio","index","color","item","components_collections_VirtualCard","objectSpread","backgroundColor","_this3","_this$state","es","disableHeight","_ref2","getColumnCount","rowCount","getRowCount","cellRenderer","_ref3","isScrolling","scrollTop","autoHeight","estimatedColumnSizex","overscanRowCount","Component","defaultProps","PlaceholderOnScroll","cellRangeRenderer","defaultCellRangeRenderer","rowStartIndex","rowStopIndex","isVisible","content","visibleRowsRange","console","log","sizes","_dimensions","defineProperty","label","WithDynamicCardSize","Grid","React","createRef","getState","setState","current","recomputeGridSize","estimatedRowHeight","useAutoHeight","cache","getCache","defaultWidth","defaultHeight","config","fixedWidth","keyMapper","fixedHeight","CellMeasurerCache","parent","_this3$state$itemSize","_this4","UncontrolledDropdown","setActiveFromChild","display","marginBottom","DropdownToggle","caret","DropdownMenu","map","DropdownItem","disabled","onClick","onSelectItemSize","deferredMeasurementCache","estimatedRowSize","scrollingResetTimeInterval","Array","tabs","title","description","Main","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","activeTabObj","Collection","BasicCollection","id","Nav","tab","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","Jumbotron","App","components_Header","components_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.7947522a.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n});\n\nvar SvgGithub = function SvgGithub(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 16 16\",\n    fill: \"white\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgGithub, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github.5a053260.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport reactLogo from '../../images/logo.svg';\nimport { ReactComponent as GithubLogo } from '../../images/github.svg';\nimport './Header.scss';\n\nconst Header = () => (\n    <header className=\"App-header\">\n        <div className=\"App-header__left\">\n            <img src={reactLogo} className=\"App-logo\" alt=\"logo\" />\n            <h3>react-virtualized Grid</h3>\n        </div>\n        <a href=\"https://github.com/makdv/react-virtualized-examples\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <GithubLogo />\n        </a>\n    </header>\n);\n\nexport default Header;","const BADGE_COLORS = [\n    '#f44336',\n    '#3f51b5',\n    '#4caf50',\n    '#ff9800',\n    '#2196f3',\n    '#374046',\n    '#cddc39',\n    '#2196f3',\n    '#9c27b0',\n    '#ffc107',\n    '#009688',\n    '#673ab7',\n    '#ffeb3b',\n    '#cddc39',\n    '#795548',\n  ];\n\n  export const getItemColor = (i) => BADGE_COLORS[i % BADGE_COLORS.length];","import React from 'react';\nimport './VirtualCard.scss';\n\nconst VirtualCard = ({ style, children }) => (\n    <div\n        className=\"virtual-card\"\n        style={style}\n    >\n        {children}\n    </div>\n);\n\nexport default VirtualCard;","import React, { Component } from 'react';\nimport { number, shape, arrayOf, object } from 'prop-types';\nimport {\n    Grid,\n    WindowScroller,\n    AutoSizer,\n} from 'react-virtualized';\nimport { getItemColor } from '../../utils';\nimport VirtualCard from './VirtualCard';\n\nexport default class Basic extends Component {\n    static propTypes = {\n        distance: number,\n        dimensions: shape({\n            width: number,\n            height: number,\n        }),\n        collection: arrayOf(object).isRequired,\n    };\n    static defaultProps = {\n        distance: 20,\n        dimensions: { width: 150, height: 300 },\n    };\n\n    constructor(props) {\n        super(props);\n        const itemSize = props.dimensions;\n        const columnWidth = this.getColumnWidth(itemSize);\n        const rowHeight = this.getRowHeight(itemSize);\n        this.state = {\n            itemSize,\n            columnWidth,\n            rowHeight,\n        };\n    }\n\n    getColumnWidth(size) {\n        return size.width + this.props.distance;\n    }\n\n    getColumnCount(gridWidth, columnWidth) {\n        return Math.floor(gridWidth / columnWidth);\n    }\n\n    getRowHeight(size) {\n        return size.height + this.props.distance;\n    }\n\n    getRowCount(columnCount) {\n        return Math.ceil(this.props.collection.length / columnCount);\n    }\n\n    cellRenderer(columnCount) {\n        return ({ columnIndex, key, rowIndex, style }) => {\n            const {\n                collection,\n                dimensions: { width, height },\n            } = this.props;\n            const index = (rowIndex * columnCount) + columnIndex;\n            const color = getItemColor(index);\n            const item = collection[index];\n            if (index >= collection.length) {\n                return null;\n            }\n            return (\n                <VirtualCard\n                    key={key}\n                    style={{\n                        ...style,\n                        backgroundColor: color,\n                        width,\n                        height,\n                    }}\n                >\n                    {item}\n                </VirtualCard>\n            );\n        };\n    }\n\n    render() {\n        const { columnWidth, rowHeight } = this.state;\n        return (\n            <AutoSizer disableHeight>\n                {\n                    ({ width }) => {\n                        const columnCount = this.getColumnCount(width, columnWidth);\n                        const rowCount = this.getRowCount(columnCount);\n                        const cellRenderer = this.cellRenderer(columnCount);\n                        return (\n                            <WindowScroller>\n                                {\n                                    ({ height, isScrolling, scrollTop }) => (\n                                        <Grid\n                                            autoHeight\n                                            isScrolling={isScrolling}\n                                            scrollTop={scrollTop}\n                                            cellRenderer={cellRenderer}\n                                            columnCount={columnCount}\n                                            columnWidth={columnWidth}\n                                            rowCount={rowCount}\n                                            rowHeight={rowHeight}\n                                            estimatedColumnSizex\n                                            overscanRowCount={3}\n                                            height={height}\n                                            width={width}\n                                        />\n                                    )\n                                }\n                            </WindowScroller>\n                        );\n                    }\n                }\n            </AutoSizer>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { number, shape, arrayOf, object } from 'prop-types';\nimport {\n    defaultCellRangeRenderer,\n    Grid,\n    WindowScroller,\n    AutoSizer,\n} from 'react-virtualized';\nimport { getItemColor } from '../../utils';\nimport VirtualCard from './VirtualCard';\n\nexport default class PlaceholderOnScroll extends Component {\n    static propTypes = {\n        distance: number,\n        dimensions: shape({\n            width: number,\n            height: number,\n        }),\n        collection: arrayOf(object).isRequired,\n    };\n    static defaultProps = {\n        distance: 20,\n        dimensions: { width: 150, height: 300 },\n    };\n\n    constructor(props) {\n        super(props);\n        const itemSize = props.dimensions;\n        const columnWidth = this.getColumnWidth(itemSize);\n        const rowHeight = this.getRowHeight(itemSize);\n        this.state = {\n            itemSize,\n            columnWidth,\n            rowHeight,\n        };\n    }\n\n    getColumnWidth(size) {\n        return size.width + this.props.distance;\n    }\n\n    getColumnCount(gridWidth, columnWidth) {\n        return Math.floor(gridWidth / columnWidth);\n    }\n\n    getRowHeight(size) {\n        return size.height + this.props.distance;\n    }\n\n    getRowCount(columnCount) {\n        return Math.ceil(this.props.collection.length / columnCount);\n    }\n\n    cellRangeRenderer = (props) => {\n        const children = defaultCellRangeRenderer(props);\n        this.rowStartIndex = props.rowStartIndex;\n        this.rowStopIndex = props.rowStopIndex;\n        return children;\n    };\n\n    cellRenderer(columnCount) {\n        return ({ columnIndex, key, rowIndex, style, isScrolling, isVisible }) => {\n            const {\n                collection,\n                dimensions: { width, height },\n            } = this.props;\n            const index = (rowIndex * columnCount) + columnIndex;\n            const color = getItemColor(index);\n            const item = collection[index];\n            let content = null;\n            if (index >= collection.length) {\n                return content;\n            }\n            // For performance optimization we should show a placeholder when scrolling\n            else if ((isScrolling && !isVisible) ||\n                // that is to aoivd replacing items, which are right now in the DOM, with placeholder\n                (isScrolling && (rowIndex < this.visibleRowsRange.rowStartIndex || rowIndex > this.visibleRowsRange.rowStopIndex))) {\n                content = (\n                    <VirtualCard\n                        key={key}\n                        style={{\n                            ...style,\n                            backgroundColor: '#374046',\n                            width,\n                            height,\n                        }}\n                    >\n                        Loading...\n                </VirtualCard>\n                );\n                console.log('laoding')\n            } else {\n                content = (\n                    <VirtualCard\n                        key={key}\n                        style={{\n                            ...style,\n                            backgroundColor: color,\n                            width,\n                            height,\n                        }}\n                    >\n                        {item}\n                    </VirtualCard>\n                );\n            }\n            // To track items , which are already in the DOM to avoid replacing\n            // them with placeholder when scrolling\n            this.visibleRowsRange = {\n                rowStopIndex: this.rowStopIndex,\n                rowStartIndex: this.rowStartIndex,\n            };\n            return content;\n        };\n    }\n\n    render() {\n        const { columnWidth, rowHeight } = this.state;\n        return (\n            <AutoSizer disableHeight>\n                {\n                    ({ width }) => {\n                        const columnCount = this.getColumnCount(width, columnWidth);\n                        const rowCount = this.getRowCount(columnCount);\n                        const cellRenderer = this.cellRenderer(columnCount);\n                        return (\n                            <WindowScroller>\n                                {\n                                    ({ height, isScrolling, scrollTop }) => (\n                                        <Grid\n                                            autoHeight\n                                            isScrolling={isScrolling}\n                                            scrollTop={scrollTop}\n                                            cellRenderer={cellRenderer}\n                                            cellRangeRenderer={this.cellRangeRenderer}\n                                            columnCount={columnCount}\n                                            columnWidth={columnWidth}\n                                            rowCount={rowCount}\n                                            rowHeight={rowHeight}\n                                            estimatedColumnSizex\n                                            overscanRowCount={3}\n                                            height={height}\n                                            width={width}\n                                        />\n                                    )\n                                }\n                            </WindowScroller>\n                        );\n                    }\n                }\n            </AutoSizer>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { number, arrayOf, object } from \"prop-types\";\nimport {\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\";\nimport {\n  defaultCellRangeRenderer,\n  Grid,\n  WindowScroller,\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache\n} from \"react-virtualized\";\nimport { getItemColor } from \"../../utils\";\nimport VirtualCard from \"./VirtualCard\";\n\nconst sizes = [\"Small\", \"Default\", \"Large\", \"Random\"];\nconst dimensions = {\n  [sizes[0]]: { width: 100, height: 250, label: sizes[0] },\n  [sizes[1]]: { width: 150, height: 300, label: sizes[1] },\n  [sizes[2]]: { width: 250, height: 450, label: sizes[2] }\n};\n\nexport default class WithDynamicCardSize extends Component {\n  static propTypes = {\n    distance: number,\n    collection: arrayOf(object).isRequired\n  };\n  static defaultProps = {\n    distance: 20\n  };\n\n  visibleRowsRange = null;\n  Grid = React.createRef();\n  state = this.getState();\n\n  onSelectItemSize(size) {\n    const state = this.getState(size);\n    this.setState(state, () => {\n      // positioning cells after dimensions recalculating\n      this.Grid.current.recomputeGridSize();\n    });\n  }\n\n  getState(size) {\n    const itemSize = size ? dimensions[size] : dimensions[\"Default\"];\n    const columnWidth = this.getColumnWidth(itemSize);\n    const estimatedRowHeight = this.getRowHeight(itemSize);\n    const useAutoHeight = itemSize.label === sizes[3];\n    return {\n      itemSize,\n      columnWidth,\n      estimatedRowHeight,\n      useAutoHeight,\n      cache: this.getCache(columnWidth, estimatedRowHeight, useAutoHeight)\n    };\n  }\n\n  getCache(defaultWidth, defaultHeight, useAutoHeight) {\n    let config = {\n      defaultWidth,\n      fixedWidth: true,\n      keyMapper: () => 1 // recommended optimization\n    };\n    if (!useAutoHeight) {\n      config = {\n        ...config,\n        defaultHeight,\n        fixedHeight: true\n      };\n    }\n    return new CellMeasurerCache(config);\n  }\n\n  getColumnWidth(size) {\n    return size.width + this.props.distance;\n  }\n\n  getColumnCount(gridWidth, columnWidth) {\n    return Math.floor(gridWidth / columnWidth);\n  }\n\n  getRowHeight(size) {\n    return size.height + this.props.distance;\n  }\n\n  getRowCount(columnCount) {\n    return Math.ceil(this.props.collection.length / columnCount);\n  }\n\n  cellRangeRenderer = props => {\n    const children = defaultCellRangeRenderer(props);\n    this.rowStartIndex = props.rowStartIndex;\n    this.rowStopIndex = props.rowStopIndex;\n    return children;\n  };\n\n  cellRenderer(columnCount, columnWidth) {\n    return ({ columnIndex, key, rowIndex, style, isScrolling, isVisible, parent }) => {\n      const {\n        collection,\n      } = this.props;\n      const {\n        itemSize: { width, height },\n      } = this.state;\n      const index = rowIndex * columnCount + columnIndex;\n      const color = getItemColor(index);\n      const item = collection[index];\n      let content = null;\n      if (index >= collection.length) {\n        return content;\n      }\n      // For performance optimization we should show a placeholder when scrolling\n      else if (\n        (isScrolling && !isVisible) ||\n        // that is to aoivd replacing items, which are right now in the DOM, with placeholder\n        (isScrolling &&\n          (rowIndex < this.visibleRowsRange.rowStartIndex ||\n            rowIndex > this.visibleRowsRange.rowStopIndex))\n      ) {\n        content = (\n          <VirtualCard\n            style={{\n              backgroundColor: \"#374046\",\n              width,\n              height\n            }}\n          >\n            Loading...\n          </VirtualCard>\n        );\n      } else {\n        content = (\n          <VirtualCard\n            style={{\n              backgroundColor: color,\n              width,\n              height\n            }}\n          >\n            {item}\n          </VirtualCard>\n        );\n      }\n      // To track items , which are already in the DOM to avoid replacing\n      // them with placeholder when scrolling\n      this.visibleRowsRange = {\n        rowStopIndex: this.rowStopIndex,\n        rowStartIndex: this.rowStartIndex\n      };\n      return (\n        <CellMeasurer\n          cache={this.state.cache}\n          columnIndex={columnIndex}\n          key={key}\n          parent={parent}\n          rowIndex={rowIndex}\n        >\n          <div\n            style={{\n              ...style,\n              width: columnWidth\n            }}\n          >\n            {content}\n          </div>\n        </CellMeasurer>\n      );\n    };\n  }\n\n  render() {\n    const { columnWidth, itemSize, estimatedRowHeight, useAutoHeight, cache } = this.state;\n    return (\n      <div>\n        <UncontrolledDropdown setActiveFromChild style={{display: 'flex', marginBottom: '20px'}}>\n          <DropdownToggle caret>{itemSize.label}</DropdownToggle>\n          <DropdownMenu>\n            {sizes.map(size => (\n              <DropdownItem\n                key={size}\n                disabled={size === sizes[3]}\n                onClick={() => this.onSelectItemSize(size)}\n              >\n                {size}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        <AutoSizer disableHeight>\n          {({ width }) => {\n            const columnCount = this.getColumnCount(width, columnWidth);\n            const rowCount = this.getRowCount(columnCount);\n            const cellRenderer = this.cellRenderer(columnCount, columnWidth);\n            const rowHeight = useAutoHeight\n              ? cache.rowHeight\n              : estimatedRowHeight;\n            return (\n              <WindowScroller>\n                {({ height, isScrolling, scrollTop }) => (\n                  <Grid\n                    ref={this.Grid}\n                    autoHeight\n                    isScrolling={isScrolling}\n                    scrollTop={scrollTop}\n                    deferredMeasurementCache={cache}\n                    estimatedRowSize={estimatedRowHeight}\n                    cellRenderer={cellRenderer}\n                    cellRangeRenderer={this.cellRangeRenderer}\n                    scrollingResetTimeInterval={0}\n                    columnCount={columnCount}\n                    columnWidth={columnWidth}\n                    rowCount={rowCount}\n                    rowHeight={rowHeight}\n                    overscanRowCount={3}\n                    height={height}\n                    width={width}\n                  />\n                )}\n              </WindowScroller>\n            );\n          }}\n        </AutoSizer>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Jumbotron, Button } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport {\n  Basic as BasicCollection,\n  PlaceholderOnScroll,\n  WithDynamicCardSize,\n} from \"../collections\";\nimport \"./Main.scss\";\n\nconst collection = Array(1000)\n  .fill(1)\n  .map((item, index) => index + 1);\n\nconst tabs = [\n  {\n    title: \"Basic\", \n    description: \"Basic example of a grid with items having static size\",\n    source: \"https://github.com/makdv/react-virtualized-examples/blob/master/src/components/collections/Basic.js\",\n  },\n  {\n    title: \"Placeholder on scroll (optimized)\", \n    description: \"Optimized example of using placeholder instead of a real item when scrolling. It's usefull for performance optimizations. Placeholder does not replace items which are already mounted into the DOM and appears only for items, which are outside of the visible part. If you scroll very fast - you will see the placeholder\",\n    source: \"https://github.com/makdv/react-virtualized-examples/blob/master/src/components/collections/PlaceholderOnScroll.js\",\n},\n  {\n    title: \"Dynamic item size\",\n    description: \"Example of grid, where size of items can be changed, including non-static size. It's using CellMeasurer component to show how to calculate item size and CellMeasurerCache component for an optimization. (In general, CellMeasurer can be avoided for known static sizes)\",\n    source: \"https://github.com/makdv/react-virtualized-examples/blob/master/src/components/collections/WithDynamicCardSize.js\",\n  },\n];\n\nconst Main = () => {\n  const [activeTab, setActiveTab] = useState(1);\n  const toggle = tab => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n  };\n  const activeTabObj = tabs[activeTab - 1];\n\n  let Collection = BasicCollection;\n  switch (activeTab) {\n    case 1:\n      Collection = BasicCollection;\n      break;\n    case 2:\n      Collection = PlaceholderOnScroll;\n      break;\n    case 3:\n      Collection = WithDynamicCardSize;\n      break;\n    default:\n      return (Collection = BasicCollection);\n  }\n  return (\n    <main id=\"main\">\n      <Nav tabs>\n        {tabs.map((tab, index) => (\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === index + 1 })}\n              onClick={() => {\n                toggle(index + 1);\n              }}\n            >\n              {tab.title}\n            </NavLink>\n          </NavItem>\n        ))}\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId={activeTab}>\n          <Jumbotron>\n            {activeTabObj.description}\n            <div>\n              <a href={activeTabObj.source} target=\"_blank\" rel=\"noopener noreferrer\">source</a>\n            </div>\n          </Jumbotron>\n          <Collection collection={collection} />\n        </TabPane>\n      </TabContent>\n    </main>\n  );\n};\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from '../Header';\nimport Main from '../Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <p className=\"App-intro\">\n          <Main />\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}